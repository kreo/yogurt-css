/**
 * @utility: layouts
 * @module: _inset.scss
 */

@mixin inset(

  $prefix: null,
  $pseudo: null,
  $class: null

  ) {
  @each $modifier, $value in $inset {
    @include setRuleQuad(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "inset-",
      $modifier: $modifier,
      $property1: "top",
      $property2: "bottom",
      $property3: "left",
      $property4: "right",
      $value: $value#{$override}
    )
    @include setRuleDouble(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "inset-x-",
      $modifier: $modifier,
      $property1: "left",
      $property2: "right",
      $value: $value#{$override}
    )
    @include setRuleDouble(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "inset-y-",
      $modifier: $modifier,
      $property1: "top",
      $property2: "bottom",
      $value: $value#{$override}
    )
  }
}

@mixin insetTBLR(

  $prefix: null,
  $pseudo: null,
  $class: null

  ) {
  @each $modifier, $value in $spacing {
    @include setRuleSingle(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "top-",
      $modifier: $modifier,
      $property: "top",
      $value: $value#{$override}
    )
    @include setRuleSingle(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "bottom-",
      $modifier: $modifier,
      $property: "bottom",
      $value: $value#{$override}
    )
    @include setRuleSingle(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "left-",
      $modifier: $modifier,
      $property: "left",
      $value: $value#{$override}
    )
    @include setRuleSingle(
      $prefix: $prefix,
      $pseudo: $pseudo,
      $class: $class,
      $selector: "right-",
      $modifier: $modifier,
      $property: "right",
      $value: $value#{$override}
    )
  }
}


