/**
 * @file: _rules.scss
 */

// class options
$class-true: ".";
$class-false: "";
$negative-true: "-";
$negative-false: "";

// prefix options
$prefix-false: "";

// pseudo options
$pseudo-false: "";

// prefix variants
$prefix-hover: ".hover\\#{$separator}";
$prefix-group-hover: ".group:hover .group-hover\\#{$separator}";
$prefix-focus: ".focus\\#{$separator}";
$prefix-active: ".active\\#{$separator}";
$prefix-visited: ".variants\\#{$separator}";
$prefix-disabled: ".disabled\\#{$separator}";

// pseudo variants
$pseudo-hover: ":hover";
$pseudo-focus: ":focus";
$pseudo-active: ":active";
$pseudo-visited: ":visited";
$pseudo-disabled: ":disabled";

/* at rules */

@mixin setRuleSingle($prefix, $pseudo, $class, $selector, $modifier, $property, $value) {
  #{$prefix}#{$class}#{$id}#{$selector}#{$modifier}#{$pseudo} {
    #{$property}: #{$value}
  }
}

@mixin setRuleDouble($prefix, $pseudo, $class, $selector, $modifier, $property1, $property2, $value) {
  #{$prefix}#{$class}#{$id}#{$selector}#{$modifier}#{$pseudo} {
    #{$property1}: #{$value};
    #{$property2}: #{$value}
  }
}

@mixin setRuleQuad($prefix, $pseudo, $class, $selector, $modifier, $property1, $property2, $property3, $property4, $value) {
  #{$prefix}#{$class}#{$id}#{$selector}#{$modifier}#{$pseudo} {
    #{$property1}: #{$value};
    #{$property2}: #{$value};
    #{$property3}: #{$value};
    #{$property4}: #{$value}
  }
}

/* colors */

@mixin textColor($prefix, $pseudo, $class, $color, $strength, $hex, $radius) {
  #{$prefix}#{$class}#{$id}text-#{$color}-#{$strength}#{$pseudo} {
    color: #{$hex}#{$override}
  }
}

@mixin backgroundColor($prefix, $pseudo, $class, $color, $strength, $hex, $radius) {
  #{$prefix}#{$class}#{$id}bg-#{$color}-#{$strength}#{$pseudo} {
    background-color: #{$hex}#{$override}
  }
}

@mixin borderColor($prefix, $pseudo, $class, $color, $strength, $hex, $radius) {
  #{$prefix}#{$class}#{$id}border-#{$color}-#{$strength}#{$pseudo} {
    border-color: #{$hex}#{$override}
  }
}

@mixin shadowColor($prefix, $pseudo, $class, $color, $strength, $hex, $radius) {
  @each $size, $radius in $shadow-color {
    #{$prefix}#{$class}#{$id}shadow-#{$size}-#{$color}-#{$strength}#{$pseudo} {
      box-shadow: 0 0 #{$radius} #{$hex}#{$override}
     }
   }
}

@mixin placeholderColor($prefix, $pseudo, $class, $color, $strength, $hex, $radius) {
  #{$prefix}#{$class}#{$id}placeholder-#{$color}-#{$strength}:-ms-input-placeholder#{$pseudo} {
    color: #{$hex}#{$override}
  }
  #{$prefix}#{$class}#{$id}placeholder-#{$color}-#{$strength}::-ms-input-placeholder#{$pseudo} {
    color: #{$hex}#{$override}
  }
  #{$prefix}#{$class}#{$id}placeholder-#{$color}-#{$strength}::placeholder#{$pseudo} {
    color: #{$hex}#{$override}
  }
}
