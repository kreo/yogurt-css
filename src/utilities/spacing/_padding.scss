///// rules /////

@mixin padding(
  $prefix, $pseudo, $class, $modifier, $value) {

  @include setRuleSingle(
    $prefix, $pseudo, $class,
    "p-", $modifier,
    "padding", $value#{$override}
  )

  @include setRuleDouble(
    $prefix, $pseudo, $class,
    "px-", $modifier,
    "padding-left", "padding-right", $value#{$override}
  )

  @include setRuleDouble(
    $prefix, $pseudo, $class,
    "py-", $modifier,
    "padding-top", "padding-bottom", $value#{$override}
  )

  @include setRuleSingle(
    $prefix, $pseudo, $class,
    "pt-", $modifier,
    "padding-top", $value#{$override}
  )

  @include setRuleSingle(
    $prefix, $pseudo, $class,
    "pb-", $modifier,
    "padding-bottom", $value#{$override}
  )

  @include setRuleSingle(
    $prefix, $pseudo, $class,
    "pl-", $modifier,
    "padding-left", $value#{$override}
  )

  @include setRuleSingle(
    $prefix, $pseudo, $class,
    "pr-", $modifier,
    "padding-right", $value#{$override}
  )

}

///// variants /////

/* standalone */
/* hover */
/* focus */
/* active */

@each $modifier, $value in $spacing {

  /* global */
  @include padding(
    "", "", ".", $modifier, $value
  )

  /* hover */
  /* focus */
  /* active */

  /* responsive */
  @each $screen, $size in $screens {
    @media (min-width: #{$size}) {

      /* standalone */

      /* global */
      @include padding(
        ".#{$screen}\\:", "", "", $modifier, $value
      )

      /* hover */
      /* focus */
      /* active */
    }
  }
}